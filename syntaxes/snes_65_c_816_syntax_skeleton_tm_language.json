{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "SNES 65C816 Assembly",
  "patterns": [
    { "include": "#comments" },
    { "include": "#punctuation" },
    { "include": "#literals" },
    { "include": "#strings" },
    { "include": "#chars" },
    { "include": "#operators" },
    { "include": "#opcodes_arithmetic" },
    { "include": "#opcodes_logic" },
    { "include": "#opcodes_memory" },
    { "include": "#opcodes_branch" },
    { "include": "#opcodes_flow" },
    { "include": "#opcodes_stack" },
    { "include": "#opcodes_status" },
    { "include": "#opcodes_bit" },
    { "include": "#opcodes_system" },
    { "include": "#macros" },
    { "include": "#labels" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        { "name": "comment.line.65c816", "match": ";.*$" },
        { "name": "comment.block.65c816", "begin": "/\\*", "end": "\\*/" }
      ]
    },
    "punctuation": {
      "patterns": [
        { "name": "punctuation.parenthesis.65c816", "match": "\\(|\\)" },
        { "name": "punctuation.separator.65c816", "match": "," }
      ]
    },
    "literals": {
      "patterns": [
        { "name": "constant.numeric.binary.65c816", "match": "%[01]+\\b" },
        { "name": "constant.numeric.hex.65c816", "match": "(\\$[0-9A-Fa-f]+\\b)|\\b([0-9A-Fa-f]+h\\b)" },
        { "name": "constant.numeric.decimal.65c816", "match": "\\b[0-9]+\\b" }
      ]
    },
    "strings": {
      "name": "string.quoted.double.65c816", "begin": "\"", "end": "\"" },
    "chars": {
      "patterns": [
        { "name": "string.quoted.single.65c816", "match": ".'" }
      ]
    },
    "operators": {
      "patterns": [
        { "name": "keyword.operator.immediate.65c816", "match": "#" },
        { "name": "keyword.operator.misc.65c816", "match": "=|<>|:=|\\+|-|\\*|/|&|~|\\||<<|>>|&&|\\|\\||!|<|>|<=|>=" }
      ]
    },
    "opcodes_arithmetic": {
      "patterns": [
        {
          "comment": "Arithmetic Instructions",
          "name": "keyword.mnemonic.math.snes65c816",
          "match": "^[ \\t]*:?[ \\t]*\\b(?i:adc|sbc|inc|dec)\\b"
        }
      ]
    },
    "opcodes_transfer": {
      "patterns": [
        {
          "comment": "Data Transfer Instructions",
          "name": "keyword.mnemonic.transfer.snes65c816",
          "match": "^[ \\t]*:?[ \\t]*\\b(?i:lda|ldx|ldy|sta|stx|sty|stz|mvn|mvp|pea|pei|per)\\b"
        }
      ]
    },
    "opcodes_branch": {
      "patterns": [
        {
          "comment": "Branch Instructions",
          "name": "keyword.mnemonic.branch.snes65c816",
          "match": "^[ \\t]*:?[ \\t]*\\b(?i:bcc|bcs|beq|bmi|bne|bpl|bra|brl|bvc|bvs)\\b"
        }
      ]
    },
    "opcodes_stack": {
      "patterns": [
        {
          "comment": "Stack Instructions",
          "name": "keyword.mnemonic.stack.snes65c816",
          "match": "^[ \\t]*:?[ \\t]*\\b(?i:pha|pla|php|plp|phb|plb|phd|pld|phk|phx|phy|plx|ply)\\b"
        }
      ]
    },
    "opcodes_transfer_reg": {
      "patterns": [
        {
          "comment": "Transfer Between Registers Instructions",
          "name": "keyword.mnemonic.transferreg.snes65c816",
          "match": "^[ \\t]*:?[ \\t]*\\b(?i:txa|tax|tya|tay|tsx|txs|txy|tyx|tcd|tdc|tsc|tcs)\\b"
        }
      ]
    },
    "opcodes_bitwise": {
      "patterns": [
        {
          "comment": "Bitwise Instructions",
          "name": "keyword.mnemonic.bitwise.snes65c816",
          "match": "^[ \\t]*:?[ \\t]*\\b(?i:and|ora|eor|asl|lsr|rol|ror|bit|trb|tsb)\\b"
        }
      ]
    },
    "opcodes_flow": {
      "patterns": [
        {
          "comment": "Program Flow Instructions",
          "name": "keyword.mnemonic.flow.snes65c816",
          "match": "^[ \\t]*:?[ \\t]*\\b(?i:jmp|jml|jsr|jsl|rts|rtl|rti)\\b"
        }
      ]
    },
    "opcodes_flags": {
      "patterns": [
        {
          "comment": "Processor Flag Instructions",
          "name": "keyword.mnemonic.flags.snes65c816",
          "match": "^[ \\t]*:?[ \\t]*\\b(?i:clc|sec|cli|sei|cld|sed|clv|rep|sep|xce)\\b"
        }
      ]
    },
    "opcodes_misc": {
      "patterns": [
        {
          "comment": "Miscellaneous Instructions",
          "name": "keyword.mnemonic.misc.snes65c816",
          "match": "^[ \\t]*:?[ \\t]*\\b(?i:cop|brk|stp|wai|wdm|nop|xba|cmp|cpy|cpx)\\b"
        }
      ]
    },
    "macros": {
      "patterns": [
        
        {
          "name": "meta.preprocessor.macro.65c816",
          "match": "^\\s*\\.(macro|endmacro)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
          "captures": {
            "1": { "name": "keyword.control.macro.65c816" },
            "2": { "name": "entity.name.function.macro.65c816" }
          }
        },
        
        {
          "name": "entity.name.function.macro.use.65c816",
          "match": "^\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()",
          "captures": {
            "1": { "name": "entity.name.function.macro.65c816" }
          }
        }
      ]
    },
    "labels": {
      "patterns": [
        
        {
          "name": "entity.name.label.65c816",
          "match": "^\\s*([a-zA-Z_][a-zA-Z0-9_]*):",
          "captures": {
            "1": { "name": "entity.name.label.65c816" }
          }
        },
        
        {
          "name": "entity.name.label.local.65c816",
          "match": "^\\s*(@[a-zA-Z_][a-zA-Z0-9_]*):",
          "captures": {
            "1": { "name": "entity.name.label.local.65c816" }
          }
        },
        
        {
          "name": "variable.other.label.reference.65c816",
          "match": "(?<!:)\\b([@a-zA-Z_][a-zA-Z0-9_]*)\\b"
        }
      ]
    }
  },
  "scopeName": "source.65c816"
}
