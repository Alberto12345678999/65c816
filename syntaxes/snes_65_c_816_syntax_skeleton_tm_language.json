{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "SNES 65C816 Assembly",
  "patterns": [
    { "include": "#comments" },
    { "include": "#punctuation" },
    { "include": "#literals" },
    { "include": "#strings" },
    { "include": "#chars" },
    { "include": "#operators" },
    { "include": "#opcodes_arithmetic" },
    { "include": "#opcodes_logic" },
    { "include": "#opcodes_memory" },
    { "include": "#opcodes_branch" },
    { "include": "#opcodes_flow" },
    { "include": "#opcodes_stack" },
    { "include": "#opcodes_status" },
    { "include": "#opcodes_bit" },
    { "include": "#opcodes_system" },
    { "include": "#macros" },
    { "include": "#labels" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        { "name": "comment.line.65c816", "match": ";.*$" },
        { "name": "comment.block.65c816", "begin": "/\\*", "end": "\\*/" }
      ]
    },
    "punctuation": {
      "patterns": [
        { "name": "punctuation.parenthesis.65c816", "match": "\\(|\\)" },
        { "name": "punctuation.separator.65c816", "match": "," }
      ]
    },
    "literals": {
      "patterns": [
        { "name": "constant.numeric.binary.65c816", "match": "%[01]+\\b" },
        { "name": "constant.numeric.hex.65c816", "match": "(\\$[0-9A-Fa-f]+\\b)|\\b([0-9A-Fa-f]+h\\b)" },
        { "name": "constant.numeric.decimal.65c816", "match": "\\b[0-9]+\\b" }
      ]
    },
    "strings": {
      "name": "string.quoted.double.65c816", "begin": "\"", "end": "\"" },
    "chars": {
      "patterns": [
        { "name": "string.quoted.single.65c816", "match": ".'" }
      ]
    },
    "operators": {
      "patterns": [
        { "name": "keyword.operator.immediate.65c816", "match": "#" },
        { "name": "keyword.operator.misc.65c816", "match": "=|<>|:=|\\+|-|\\*|/|&|~|\\||<<|>>|&&|\\|\\||!|<|>|<=|>=" }
      ]
    },
    "opcodes_arithmetic": {
      "patterns": [
        { "name": "keyword.opcode.arithmetic.65c816", "match": "\\b(ADC|SBC|INC|DEC|INA|DEA|INX|DEX|INY|DEY|SBC|CMP)\\b" }
      ]
    },
    "opcodes_logic": {
      "patterns": [
        { "name": "keyword.opcode.logic.65c816", "match": "\\b(AND|ORA|EOR|BIT|TRB|TSB)\\b" }
      ]
    },
    "opcodes_memory": {
      "patterns": [
        { "name": "keyword.opcode.memory.65c816", "match": "\\b(LDA|STA|LDX|STX|LDY|STY|STZ|MVN|MVP|PEA|PEI|PER)\\b" }
      ]
    },
    "opcodes_branch": {
      "patterns": [
        { "name": "keyword.opcode.branch.65c816", "match": "\\b(BCC|BCS|BEQ|BMI|BNE|BPL|BRA|BRL|BVC|BVS)\\b" }
      ]
    },
    "opcodes_flow": {
      "patterns": [
        { "name": "keyword.opcode.flow.65c816", "match": "\\b(JMP|JML|JSR|JSL|RTS|RTL|RTI)\\b" }
      ]
    },
    "opcodes_stack": {
      "patterns": [
        { "name": "keyword.opcode.stack.65c816", "match": "\\b(PHA|PLA|PHP|PLP|PHB|PLB|PHD|PLD|PHK|PHX|PHY|PLX|PLY|TXA|TAX|TYA|TAY|TSX|TXS|TXY|TYX|TCD|TDC|TSC|TCS)\\b" }
      ]
    },
    "opcodes_status": {
      "patterns": [
        { "name": "keyword.opcode.status.65c816", "match": "\\b(CLC|SEC|CLI|SEI|CLD|SED|CLV|REP|SEP|XCE)\\b" }
      ]
    },
    "opcodes_bit": {
      "patterns": [
        { "name": "keyword.opcode.bit.65c816", "match": "\\b(ASL|LSR|ROL|ROR)\\b" }
      ]
    },
    "opcodes_system": {
      "patterns": [
        { "name": "keyword.opcode.system.65c816", "match": "\\b(COP|BRK|STP|WAI|WDM|NOP|XBA)\\b" }
      ]
    },
    "macros": {
      "patterns": [
        
        {
          "name": "meta.preprocessor.macro.65c816",
          "match": "^\\s*\\.(macro|endmacro)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
          "captures": {
            "1": { "name": "keyword.control.macro.65c816" },
            "2": { "name": "entity.name.function.macro.65c816" }
          }
        },
        
        {
          "name": "entity.name.function.macro.use.65c816",
          "match": "^\\\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\\\s*(?=\\()",
          "captures": {
            "1": { "name": "entity.name.function.macro.65c816" }
          }
        }
      ]
    },
    "labels": {
      "patterns": [
        
        {
          "name": "entity.name.label.65c816",
          "match": "^\\s*([a-zA-Z_][a-zA-Z0-9_]*):",
          "captures": {
            "1": { "name": "entity.name.label.65c816" }
          }
        },
        
        {
          "name": "entity.name.label.local.65c816",
          "match": "^\\s*(@[a-zA-Z_][a-zA-Z0-9_]*):",
          "captures": {
            "1": { "name": "entity.name.label.local.65c816" }
          }
        },
        
        {
          "name": "variable.other.label.reference.65c816",
          "match": "(?<!:)\\b([@a-zA-Z_][a-zA-Z0-9_]*)\\b"
        }
      ]
    }
  },
  "scopeName": "source.65c816"
}
